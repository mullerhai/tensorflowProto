// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package org.tensorflow.example.example

@SerialVersionUID(0L)
final case class SequenceExample(
    context: _root_.scala.Option[org.tensorflow.example.feature.Features] = _root_.scala.None,
    featureLists: _root_.scala.Option[org.tensorflow.example.feature.FeatureLists] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[SequenceExample] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      if (context.isDefined) {
        val __value = context.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (featureLists.isDefined) {
        val __value = featureLists.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      context.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      featureLists.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def getContext: org.tensorflow.example.feature.Features = context.getOrElse(org.tensorflow.example.feature.Features.defaultInstance)
    def clearContext: SequenceExample = copy(context = _root_.scala.None)
    def withContext(__v: org.tensorflow.example.feature.Features): SequenceExample = copy(context = Option(__v))
    def getFeatureLists: org.tensorflow.example.feature.FeatureLists = featureLists.getOrElse(org.tensorflow.example.feature.FeatureLists.defaultInstance)
    def clearFeatureLists: SequenceExample = copy(featureLists = _root_.scala.None)
    def withFeatureLists(__v: org.tensorflow.example.feature.FeatureLists): SequenceExample = copy(featureLists = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => context.orNull
        case 2 => featureLists.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => context.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => featureLists.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = org.tensorflow.example.example.SequenceExample
    // @@protoc_insertion_point(GeneratedMessage[tensorflow.SequenceExample])
}

object SequenceExample extends scalapb.GeneratedMessageCompanion[org.tensorflow.example.example.SequenceExample] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[org.tensorflow.example.example.SequenceExample] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): org.tensorflow.example.example.SequenceExample = {
    var __context: _root_.scala.Option[org.tensorflow.example.feature.Features] = _root_.scala.None
    var __featureLists: _root_.scala.Option[org.tensorflow.example.feature.FeatureLists] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __context = Option(__context.fold(_root_.scalapb.LiteParser.readMessage[org.tensorflow.example.feature.Features](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __featureLists = Option(__featureLists.fold(_root_.scalapb.LiteParser.readMessage[org.tensorflow.example.feature.FeatureLists](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    org.tensorflow.example.example.SequenceExample(
        context = __context,
        featureLists = __featureLists,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[org.tensorflow.example.example.SequenceExample] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      org.tensorflow.example.example.SequenceExample(
        context = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[org.tensorflow.example.feature.Features]]),
        featureLists = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[org.tensorflow.example.feature.FeatureLists]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ExampleProto.javaDescriptor.getMessageTypes().get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ExampleProto.scalaDescriptor.messages(1)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = org.tensorflow.example.feature.Features
      case 2 => __out = org.tensorflow.example.feature.FeatureLists
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = org.tensorflow.example.example.SequenceExample(
    context = _root_.scala.None,
    featureLists = _root_.scala.None
  )
  implicit class SequenceExampleLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.example.example.SequenceExample]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, org.tensorflow.example.example.SequenceExample](_l) {
    def context: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.example.feature.Features] = field(_.getContext)((c_, f_) => c_.copy(context = Option(f_)))
    def optionalContext: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[org.tensorflow.example.feature.Features]] = field(_.context)((c_, f_) => c_.copy(context = f_))
    def featureLists: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.example.feature.FeatureLists] = field(_.getFeatureLists)((c_, f_) => c_.copy(featureLists = Option(f_)))
    def optionalFeatureLists: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[org.tensorflow.example.feature.FeatureLists]] = field(_.featureLists)((c_, f_) => c_.copy(featureLists = f_))
  }
  final val CONTEXT_FIELD_NUMBER = 1
  final val FEATURE_LISTS_FIELD_NUMBER = 2
  def of(
    context: _root_.scala.Option[org.tensorflow.example.feature.Features],
    featureLists: _root_.scala.Option[org.tensorflow.example.feature.FeatureLists]
  ): _root_.org.tensorflow.example.example.SequenceExample = _root_.org.tensorflow.example.example.SequenceExample(
    context,
    featureLists
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[tensorflow.SequenceExample])
}
