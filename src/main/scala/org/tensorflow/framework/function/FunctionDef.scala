// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package org.tensorflow.framework.function

/** A function can be instantiated when the runtime can bind every attr
  * with a value. When a GraphDef has a call to a function, it must
  * have binding for every attr defined in the signature.
  *
  * TODO(zhifengc):
  *   * device spec, etc.
  *
  * @param signature
  *   The definition of the function's name, arguments, return values,
  *   attrs etc.
  * @param attr
  *   Attributes specific to this function definition.
  * @param nodeDef
  *   By convention, "op" in node_def is resolved by consulting with a
  *   user-defined library first. If not resolved, "func" is assumed to
  *   be a builtin op.
  * @param ret
  *   A mapping from the output arg names from `signature` to the
  *   outputs from `node_def` that should be returned by the function.
  */
@SerialVersionUID(0L)
final case class FunctionDef(
    signature: _root_.scala.Option[org.tensorflow.framework.op_def.OpDef] = _root_.scala.None,
    attr: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue] = _root_.scala.collection.immutable.Map.empty,
    nodeDef: _root_.scala.Seq[org.tensorflow.framework.node_def.NodeDef] = _root_.scala.Seq.empty,
    ret: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String] = _root_.scala.collection.immutable.Map.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[FunctionDef] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      if (signature.isDefined) {
        val __value = signature.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      attr.foreach { __item =>
        val __value = org.tensorflow.framework.function.FunctionDef._typemapper_attr.toBase(__item)
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      nodeDef.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      ret.foreach { __item =>
        val __value = org.tensorflow.framework.function.FunctionDef._typemapper_ret.toBase(__item)
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      signature.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      nodeDef.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      ret.foreach { __v =>
        val __m = org.tensorflow.framework.function.FunctionDef._typemapper_ret.toBase(__v)
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      attr.foreach { __v =>
        val __m = org.tensorflow.framework.function.FunctionDef._typemapper_attr.toBase(__v)
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def getSignature: org.tensorflow.framework.op_def.OpDef = signature.getOrElse(org.tensorflow.framework.op_def.OpDef.defaultInstance)
    def clearSignature: FunctionDef = copy(signature = _root_.scala.None)
    def withSignature(__v: org.tensorflow.framework.op_def.OpDef): FunctionDef = copy(signature = Option(__v))
    def clearAttr = copy(attr = _root_.scala.collection.immutable.Map.empty)
    def addAttr(__vs: (_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue)*): FunctionDef = addAllAttr(__vs)
    def addAllAttr(__vs: Iterable[(_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue)]): FunctionDef = copy(attr = attr ++ __vs)
    def withAttr(__v: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue]): FunctionDef = copy(attr = __v)
    def clearNodeDef = copy(nodeDef = _root_.scala.Seq.empty)
    def addNodeDef(__vs: org.tensorflow.framework.node_def.NodeDef*): FunctionDef = addAllNodeDef(__vs)
    def addAllNodeDef(__vs: Iterable[org.tensorflow.framework.node_def.NodeDef]): FunctionDef = copy(nodeDef = nodeDef ++ __vs)
    def withNodeDef(__v: _root_.scala.Seq[org.tensorflow.framework.node_def.NodeDef]): FunctionDef = copy(nodeDef = __v)
    def clearRet = copy(ret = _root_.scala.collection.immutable.Map.empty)
    def addRet(__vs: (_root_.scala.Predef.String, _root_.scala.Predef.String)*): FunctionDef = addAllRet(__vs)
    def addAllRet(__vs: Iterable[(_root_.scala.Predef.String, _root_.scala.Predef.String)]): FunctionDef = copy(ret = ret ++ __vs)
    def withRet(__v: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String]): FunctionDef = copy(ret = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => signature.orNull
        case 5 => attr.iterator.map(org.tensorflow.framework.function.FunctionDef._typemapper_attr.toBase(_)).toSeq
        case 3 => nodeDef
        case 4 => ret.iterator.map(org.tensorflow.framework.function.FunctionDef._typemapper_ret.toBase(_)).toSeq
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => signature.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => _root_.scalapb.descriptors.PRepeated(attr.iterator.map(org.tensorflow.framework.function.FunctionDef._typemapper_attr.toBase(_).toPMessage).toVector)
        case 3 => _root_.scalapb.descriptors.PRepeated(nodeDef.iterator.map(_.toPMessage).toVector)
        case 4 => _root_.scalapb.descriptors.PRepeated(ret.iterator.map(org.tensorflow.framework.function.FunctionDef._typemapper_ret.toBase(_).toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = org.tensorflow.framework.function.FunctionDef
    // @@protoc_insertion_point(GeneratedMessage[tensorflow.FunctionDef])
}

object FunctionDef extends scalapb.GeneratedMessageCompanion[org.tensorflow.framework.function.FunctionDef] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[org.tensorflow.framework.function.FunctionDef] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): org.tensorflow.framework.function.FunctionDef = {
    var __signature: _root_.scala.Option[org.tensorflow.framework.op_def.OpDef] = _root_.scala.None
    val __attr: _root_.scala.collection.mutable.Builder[(_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue), _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue]] = _root_.scala.collection.immutable.Map.newBuilder[_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue]
    val __nodeDef: _root_.scala.collection.immutable.VectorBuilder[org.tensorflow.framework.node_def.NodeDef] = new _root_.scala.collection.immutable.VectorBuilder[org.tensorflow.framework.node_def.NodeDef]
    val __ret: _root_.scala.collection.mutable.Builder[(_root_.scala.Predef.String, _root_.scala.Predef.String), _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String]] = _root_.scala.collection.immutable.Map.newBuilder[_root_.scala.Predef.String, _root_.scala.Predef.String]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __signature = Option(__signature.fold(_root_.scalapb.LiteParser.readMessage[org.tensorflow.framework.op_def.OpDef](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 42 =>
          __attr += org.tensorflow.framework.function.FunctionDef._typemapper_attr.toCustom(_root_.scalapb.LiteParser.readMessage[org.tensorflow.framework.function.FunctionDef.AttrEntry](_input__))
        case 26 =>
          __nodeDef += _root_.scalapb.LiteParser.readMessage[org.tensorflow.framework.node_def.NodeDef](_input__)
        case 34 =>
          __ret += org.tensorflow.framework.function.FunctionDef._typemapper_ret.toCustom(_root_.scalapb.LiteParser.readMessage[org.tensorflow.framework.function.FunctionDef.RetEntry](_input__))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    org.tensorflow.framework.function.FunctionDef(
        signature = __signature,
        attr = __attr.result(),
        nodeDef = __nodeDef.result(),
        ret = __ret.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[org.tensorflow.framework.function.FunctionDef] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      org.tensorflow.framework.function.FunctionDef(
        signature = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[org.tensorflow.framework.op_def.OpDef]]),
        attr = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Seq[org.tensorflow.framework.function.FunctionDef.AttrEntry]]).getOrElse(_root_.scala.Seq.empty).iterator.map(org.tensorflow.framework.function.FunctionDef._typemapper_attr.toCustom(_)).toMap,
        nodeDef = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Seq[org.tensorflow.framework.node_def.NodeDef]]).getOrElse(_root_.scala.Seq.empty),
        ret = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Seq[org.tensorflow.framework.function.FunctionDef.RetEntry]]).getOrElse(_root_.scala.Seq.empty).iterator.map(org.tensorflow.framework.function.FunctionDef._typemapper_ret.toCustom(_)).toMap
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = FunctionProto.javaDescriptor.getMessageTypes().get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = FunctionProto.scalaDescriptor.messages(1)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = org.tensorflow.framework.op_def.OpDef
      case 5 => __out = org.tensorflow.framework.function.FunctionDef.AttrEntry
      case 3 => __out = org.tensorflow.framework.node_def.NodeDef
      case 4 => __out = org.tensorflow.framework.function.FunctionDef.RetEntry
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      _root_.org.tensorflow.framework.function.FunctionDef.AttrEntry,
      _root_.org.tensorflow.framework.function.FunctionDef.RetEntry
    )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = org.tensorflow.framework.function.FunctionDef(
    signature = _root_.scala.None,
    attr = _root_.scala.collection.immutable.Map.empty,
    nodeDef = _root_.scala.Seq.empty,
    ret = _root_.scala.collection.immutable.Map.empty
  )
  @SerialVersionUID(0L)
  final case class AttrEntry(
      key: _root_.scala.Predef.String = "",
      value: _root_.scala.Option[org.tensorflow.framework.attr_value.AttrValue] = _root_.scala.None,
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[AttrEntry] {
      @transient
      private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
      private[this] def __computeSerializedValue(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = key
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        if (value.isDefined) {
          val __value = value.get
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = key
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        value.foreach { __v =>
          val __m = __v
          _output__.writeTag(2, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
        unknownFields.writeTo(_output__)
      }
      def withKey(__v: _root_.scala.Predef.String): AttrEntry = copy(key = __v)
      def getValue: org.tensorflow.framework.attr_value.AttrValue = value.getOrElse(org.tensorflow.framework.attr_value.AttrValue.defaultInstance)
      def clearValue: AttrEntry = copy(value = _root_.scala.None)
      def withValue(__v: org.tensorflow.framework.attr_value.AttrValue): AttrEntry = copy(value = Option(__v))
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = key
            if (__t != "") __t else null
          }
          case 2 => value.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(key)
          case 2 => value.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion = org.tensorflow.framework.function.FunctionDef.AttrEntry
      // @@protoc_insertion_point(GeneratedMessage[tensorflow.FunctionDef.AttrEntry])
  }
  
  object AttrEntry extends scalapb.GeneratedMessageCompanion[org.tensorflow.framework.function.FunctionDef.AttrEntry] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[org.tensorflow.framework.function.FunctionDef.AttrEntry] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): org.tensorflow.framework.function.FunctionDef.AttrEntry = {
      var __key: _root_.scala.Predef.String = ""
      var __value: _root_.scala.Option[org.tensorflow.framework.attr_value.AttrValue] = _root_.scala.None
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __key = _input__.readStringRequireUtf8()
          case 18 =>
            __value = Option(__value.fold(_root_.scalapb.LiteParser.readMessage[org.tensorflow.framework.attr_value.AttrValue](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      org.tensorflow.framework.function.FunctionDef.AttrEntry(
          key = __key,
          value = __value,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[org.tensorflow.framework.function.FunctionDef.AttrEntry] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        org.tensorflow.framework.function.FunctionDef.AttrEntry(
          key = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[org.tensorflow.framework.attr_value.AttrValue]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = org.tensorflow.framework.function.FunctionDef.javaDescriptor.getNestedTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = org.tensorflow.framework.function.FunctionDef.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
      (__number: @_root_.scala.unchecked) match {
        case 2 => __out = org.tensorflow.framework.attr_value.AttrValue
      }
      __out
    }
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = org.tensorflow.framework.function.FunctionDef.AttrEntry(
      key = "",
      value = _root_.scala.None
    )
    implicit class AttrEntryLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.function.FunctionDef.AttrEntry]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, org.tensorflow.framework.function.FunctionDef.AttrEntry](_l) {
      def key: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.key)((c_, f_) => c_.copy(key = f_))
      def value: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.attr_value.AttrValue] = field(_.getValue)((c_, f_) => c_.copy(value = Option(f_)))
      def optionalValue: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[org.tensorflow.framework.attr_value.AttrValue]] = field(_.value)((c_, f_) => c_.copy(value = f_))
    }
    final val KEY_FIELD_NUMBER = 1
    final val VALUE_FIELD_NUMBER = 2
    @transient
    implicit val keyValueMapper: _root_.scalapb.TypeMapper[org.tensorflow.framework.function.FunctionDef.AttrEntry, (_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue)] =
      _root_.scalapb.TypeMapper[org.tensorflow.framework.function.FunctionDef.AttrEntry, (_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue)](__m => (__m.key, __m.getValue))(__p => org.tensorflow.framework.function.FunctionDef.AttrEntry(__p._1, Some(__p._2)))
    def of(
      key: _root_.scala.Predef.String,
      value: _root_.scala.Option[org.tensorflow.framework.attr_value.AttrValue]
    ): _root_.org.tensorflow.framework.function.FunctionDef.AttrEntry = _root_.org.tensorflow.framework.function.FunctionDef.AttrEntry(
      key,
      value
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[tensorflow.FunctionDef.AttrEntry])
  }
  
  @SerialVersionUID(0L)
  final case class RetEntry(
      key: _root_.scala.Predef.String = "",
      value: _root_.scala.Predef.String = "",
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[RetEntry] {
      @transient
      private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
      private[this] def __computeSerializedValue(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = key
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        
        {
          val __value = value
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
          }
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = key
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        {
          val __v = value
          if (!__v.isEmpty) {
            _output__.writeString(2, __v)
          }
        };
        unknownFields.writeTo(_output__)
      }
      def withKey(__v: _root_.scala.Predef.String): RetEntry = copy(key = __v)
      def withValue(__v: _root_.scala.Predef.String): RetEntry = copy(value = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = key
            if (__t != "") __t else null
          }
          case 2 => {
            val __t = value
            if (__t != "") __t else null
          }
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(key)
          case 2 => _root_.scalapb.descriptors.PString(value)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion = org.tensorflow.framework.function.FunctionDef.RetEntry
      // @@protoc_insertion_point(GeneratedMessage[tensorflow.FunctionDef.RetEntry])
  }
  
  object RetEntry extends scalapb.GeneratedMessageCompanion[org.tensorflow.framework.function.FunctionDef.RetEntry] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[org.tensorflow.framework.function.FunctionDef.RetEntry] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): org.tensorflow.framework.function.FunctionDef.RetEntry = {
      var __key: _root_.scala.Predef.String = ""
      var __value: _root_.scala.Predef.String = ""
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __key = _input__.readStringRequireUtf8()
          case 18 =>
            __value = _input__.readStringRequireUtf8()
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      org.tensorflow.framework.function.FunctionDef.RetEntry(
          key = __key,
          value = __value,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[org.tensorflow.framework.function.FunctionDef.RetEntry] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        org.tensorflow.framework.function.FunctionDef.RetEntry(
          key = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = org.tensorflow.framework.function.FunctionDef.javaDescriptor.getNestedTypes().get(1)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = org.tensorflow.framework.function.FunctionDef.scalaDescriptor.nestedMessages(1)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = org.tensorflow.framework.function.FunctionDef.RetEntry(
      key = "",
      value = ""
    )
    implicit class RetEntryLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.function.FunctionDef.RetEntry]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, org.tensorflow.framework.function.FunctionDef.RetEntry](_l) {
      def key: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.key)((c_, f_) => c_.copy(key = f_))
      def value: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.value)((c_, f_) => c_.copy(value = f_))
    }
    final val KEY_FIELD_NUMBER = 1
    final val VALUE_FIELD_NUMBER = 2
    @transient
    implicit val keyValueMapper: _root_.scalapb.TypeMapper[org.tensorflow.framework.function.FunctionDef.RetEntry, (_root_.scala.Predef.String, _root_.scala.Predef.String)] =
      _root_.scalapb.TypeMapper[org.tensorflow.framework.function.FunctionDef.RetEntry, (_root_.scala.Predef.String, _root_.scala.Predef.String)](__m => (__m.key, __m.value))(__p => org.tensorflow.framework.function.FunctionDef.RetEntry(__p._1, __p._2))
    def of(
      key: _root_.scala.Predef.String,
      value: _root_.scala.Predef.String
    ): _root_.org.tensorflow.framework.function.FunctionDef.RetEntry = _root_.org.tensorflow.framework.function.FunctionDef.RetEntry(
      key,
      value
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[tensorflow.FunctionDef.RetEntry])
  }
  
  implicit class FunctionDefLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.function.FunctionDef]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, org.tensorflow.framework.function.FunctionDef](_l) {
    def signature: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.op_def.OpDef] = field(_.getSignature)((c_, f_) => c_.copy(signature = Option(f_)))
    def optionalSignature: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[org.tensorflow.framework.op_def.OpDef]] = field(_.signature)((c_, f_) => c_.copy(signature = f_))
    def attr: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue]] = field(_.attr)((c_, f_) => c_.copy(attr = f_))
    def nodeDef: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[org.tensorflow.framework.node_def.NodeDef]] = field(_.nodeDef)((c_, f_) => c_.copy(nodeDef = f_))
    def ret: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String]] = field(_.ret)((c_, f_) => c_.copy(ret = f_))
  }
  final val SIGNATURE_FIELD_NUMBER = 1
  final val ATTR_FIELD_NUMBER = 5
  final val NODE_DEF_FIELD_NUMBER = 3
  final val RET_FIELD_NUMBER = 4
  @transient
  private[function] val _typemapper_attr: _root_.scalapb.TypeMapper[org.tensorflow.framework.function.FunctionDef.AttrEntry, (_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue)] = implicitly[_root_.scalapb.TypeMapper[org.tensorflow.framework.function.FunctionDef.AttrEntry, (_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue)]]
  @transient
  private[function] val _typemapper_ret: _root_.scalapb.TypeMapper[org.tensorflow.framework.function.FunctionDef.RetEntry, (_root_.scala.Predef.String, _root_.scala.Predef.String)] = implicitly[_root_.scalapb.TypeMapper[org.tensorflow.framework.function.FunctionDef.RetEntry, (_root_.scala.Predef.String, _root_.scala.Predef.String)]]
  def of(
    signature: _root_.scala.Option[org.tensorflow.framework.op_def.OpDef],
    attr: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue],
    nodeDef: _root_.scala.Seq[org.tensorflow.framework.node_def.NodeDef],
    ret: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String]
  ): _root_.org.tensorflow.framework.function.FunctionDef = _root_.org.tensorflow.framework.function.FunctionDef(
    signature,
    attr,
    nodeDef,
    ret
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[tensorflow.FunctionDef])
}
