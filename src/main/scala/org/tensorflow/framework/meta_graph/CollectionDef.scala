// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package org.tensorflow.framework.meta_graph

import com.google.protobuf.any.Any


/** CollectionDef should cover most collections.
  * To add a user-defined collection, do one of the following:
  * 1. For simple data types, such as string, int, float:
  *      tf.add_to_collection("your_collection_name", your_simple_value)
  *    strings will be stored as bytes_list.
  *
  * 2. For Protobuf types, there are three ways to add them:
  *    1) tf.add_to_collection("your_collection_name",
  *         your_proto.SerializeToString())
  *
  *       collection_def {
  *         key: "user_defined_bytes_collection"
  *         value {
  *           bytes_list {
  *             value: "queue_name: &92;"test_queue&92;"&92;n"
  *           }
  *         }
  *       }
  *
  *  or
  *
  *    2) tf.add_to_collection("your_collection_name", str(your_proto))
  *
  *       collection_def {
  *         key: "user_defined_string_collection"
  *         value {
  *          bytes_list {
  *             value: "&92;n&92;ntest_queue"
  *           }
  *         }
  *       }
  *
  *  or
  *
  *    3) any_buf = any_pb2.Any()
  *       tf.add_to_collection("your_collection_name",
  *         any_buf.Pack(your_proto))
  *
  *       collection_def {
  *         key: "user_defined_any_collection"
  *         value {
  *           any_list {
  *             value {
  *               type_url: "type.googleapis.com/tensorflow.QueueRunnerDef"
  *               value: "&92;n&92;ntest_queue"
  *             }
  *           }
  *         }
  *       }
  *
  * 3. For Python objects, implement to_proto() and from_proto(), and register
  *    them in the following manner:
  *    ops.register_proto_function("your_collection_name",
  *                                proto_type,
  *                                to_proto=YourPythonObject.to_proto,
  *                                from_proto=YourPythonObject.from_proto)
  *    These functions will be invoked to serialize and de-serialize the
  *    collection. For example,
  *    ops.register_proto_function(ops.GraphKeys.GLOBAL_VARIABLES,
  *                                proto_type=variable_pb2.VariableDef,
  *                                to_proto=Variable.to_proto,
  *                                from_proto=Variable.from_proto)
  */
@SerialVersionUID(0L)
final case class CollectionDef(
    kind: org.tensorflow.framework.meta_graph.CollectionDef.Kind = org.tensorflow.framework.meta_graph.CollectionDef.Kind.Empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[CollectionDef] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      if (kind.nodeList.isDefined) {
        val __value = kind.nodeList.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (kind.bytesList.isDefined) {
        val __value = kind.bytesList.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (kind.int64List.isDefined) {
        val __value = kind.int64List.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (kind.floatList.isDefined) {
        val __value = kind.floatList.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (kind.anyList.isDefined) {
        val __value = kind.anyList.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      kind.nodeList.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      kind.bytesList.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      kind.int64List.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      kind.floatList.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      kind.anyList.foreach { __v =>
        val __m = __v
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def getNodeList: org.tensorflow.framework.meta_graph.CollectionDef.NodeList = kind.nodeList.getOrElse(org.tensorflow.framework.meta_graph.CollectionDef.NodeList.defaultInstance)
    def withNodeList(__v: org.tensorflow.framework.meta_graph.CollectionDef.NodeList): CollectionDef = copy(kind = org.tensorflow.framework.meta_graph.CollectionDef.Kind.NodeList(__v))
    def getBytesList: org.tensorflow.framework.meta_graph.CollectionDef.BytesList = kind.bytesList.getOrElse(org.tensorflow.framework.meta_graph.CollectionDef.BytesList.defaultInstance)
    def withBytesList(__v: org.tensorflow.framework.meta_graph.CollectionDef.BytesList): CollectionDef = copy(kind = org.tensorflow.framework.meta_graph.CollectionDef.Kind.BytesList(__v))
    def getInt64List: org.tensorflow.framework.meta_graph.CollectionDef.Int64List = kind.int64List.getOrElse(org.tensorflow.framework.meta_graph.CollectionDef.Int64List.defaultInstance)
    def withInt64List(__v: org.tensorflow.framework.meta_graph.CollectionDef.Int64List): CollectionDef = copy(kind = org.tensorflow.framework.meta_graph.CollectionDef.Kind.Int64List(__v))
    def getFloatList: org.tensorflow.framework.meta_graph.CollectionDef.FloatList = kind.floatList.getOrElse(org.tensorflow.framework.meta_graph.CollectionDef.FloatList.defaultInstance)
    def withFloatList(__v: org.tensorflow.framework.meta_graph.CollectionDef.FloatList): CollectionDef = copy(kind = org.tensorflow.framework.meta_graph.CollectionDef.Kind.FloatList(__v))
    def getAnyList: org.tensorflow.framework.meta_graph.CollectionDef.AnyList = kind.anyList.getOrElse(org.tensorflow.framework.meta_graph.CollectionDef.AnyList.defaultInstance)
    def withAnyList(__v: org.tensorflow.framework.meta_graph.CollectionDef.AnyList): CollectionDef = copy(kind = org.tensorflow.framework.meta_graph.CollectionDef.Kind.AnyList(__v))
    def clearKind: CollectionDef = copy(kind = org.tensorflow.framework.meta_graph.CollectionDef.Kind.Empty)
    def withKind(__v: org.tensorflow.framework.meta_graph.CollectionDef.Kind): CollectionDef = copy(kind = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => kind.nodeList.orNull
        case 2 => kind.bytesList.orNull
        case 3 => kind.int64List.orNull
        case 4 => kind.floatList.orNull
        case 5 => kind.anyList.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => kind.nodeList.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => kind.bytesList.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => kind.int64List.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => kind.floatList.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => kind.anyList.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = org.tensorflow.framework.meta_graph.CollectionDef
    // @@protoc_insertion_point(GeneratedMessage[tensorflow.CollectionDef])
}

object CollectionDef extends scalapb.GeneratedMessageCompanion[org.tensorflow.framework.meta_graph.CollectionDef] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[org.tensorflow.framework.meta_graph.CollectionDef] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): org.tensorflow.framework.meta_graph.CollectionDef = {
    var __kind: org.tensorflow.framework.meta_graph.CollectionDef.Kind = org.tensorflow.framework.meta_graph.CollectionDef.Kind.Empty
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __kind = org.tensorflow.framework.meta_graph.CollectionDef.Kind.NodeList(__kind.nodeList.fold(_root_.scalapb.LiteParser.readMessage[org.tensorflow.framework.meta_graph.CollectionDef.NodeList](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __kind = org.tensorflow.framework.meta_graph.CollectionDef.Kind.BytesList(__kind.bytesList.fold(_root_.scalapb.LiteParser.readMessage[org.tensorflow.framework.meta_graph.CollectionDef.BytesList](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 26 =>
          __kind = org.tensorflow.framework.meta_graph.CollectionDef.Kind.Int64List(__kind.int64List.fold(_root_.scalapb.LiteParser.readMessage[org.tensorflow.framework.meta_graph.CollectionDef.Int64List](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 34 =>
          __kind = org.tensorflow.framework.meta_graph.CollectionDef.Kind.FloatList(__kind.floatList.fold(_root_.scalapb.LiteParser.readMessage[org.tensorflow.framework.meta_graph.CollectionDef.FloatList](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 42 =>
          __kind = org.tensorflow.framework.meta_graph.CollectionDef.Kind.AnyList(__kind.anyList.fold(_root_.scalapb.LiteParser.readMessage[org.tensorflow.framework.meta_graph.CollectionDef.AnyList](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    org.tensorflow.framework.meta_graph.CollectionDef(
        kind = __kind,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[org.tensorflow.framework.meta_graph.CollectionDef] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      org.tensorflow.framework.meta_graph.CollectionDef(
        kind = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[org.tensorflow.framework.meta_graph.CollectionDef.NodeList]]).map(org.tensorflow.framework.meta_graph.CollectionDef.Kind.NodeList(_))
            .orElse[org.tensorflow.framework.meta_graph.CollectionDef.Kind](__fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[org.tensorflow.framework.meta_graph.CollectionDef.BytesList]]).map(org.tensorflow.framework.meta_graph.CollectionDef.Kind.BytesList(_)))
            .orElse[org.tensorflow.framework.meta_graph.CollectionDef.Kind](__fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[org.tensorflow.framework.meta_graph.CollectionDef.Int64List]]).map(org.tensorflow.framework.meta_graph.CollectionDef.Kind.Int64List(_)))
            .orElse[org.tensorflow.framework.meta_graph.CollectionDef.Kind](__fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[org.tensorflow.framework.meta_graph.CollectionDef.FloatList]]).map(org.tensorflow.framework.meta_graph.CollectionDef.Kind.FloatList(_)))
            .orElse[org.tensorflow.framework.meta_graph.CollectionDef.Kind](__fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[org.tensorflow.framework.meta_graph.CollectionDef.AnyList]]).map(org.tensorflow.framework.meta_graph.CollectionDef.Kind.AnyList(_)))
            .getOrElse(org.tensorflow.framework.meta_graph.CollectionDef.Kind.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = MetaGraphProto.javaDescriptor.getMessageTypes().get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = MetaGraphProto.scalaDescriptor.messages(1)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = org.tensorflow.framework.meta_graph.CollectionDef.NodeList
      case 2 => __out = org.tensorflow.framework.meta_graph.CollectionDef.BytesList
      case 3 => __out = org.tensorflow.framework.meta_graph.CollectionDef.Int64List
      case 4 => __out = org.tensorflow.framework.meta_graph.CollectionDef.FloatList
      case 5 => __out = org.tensorflow.framework.meta_graph.CollectionDef.AnyList
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      _root_.org.tensorflow.framework.meta_graph.CollectionDef.NodeList,
      _root_.org.tensorflow.framework.meta_graph.CollectionDef.BytesList,
      _root_.org.tensorflow.framework.meta_graph.CollectionDef.Int64List,
      _root_.org.tensorflow.framework.meta_graph.CollectionDef.FloatList,
      _root_.org.tensorflow.framework.meta_graph.CollectionDef.AnyList
    )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = org.tensorflow.framework.meta_graph.CollectionDef(
    kind = org.tensorflow.framework.meta_graph.CollectionDef.Kind.Empty
  )
  sealed trait Kind extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isNodeList: _root_.scala.Boolean = false
    def isBytesList: _root_.scala.Boolean = false
    def isInt64List: _root_.scala.Boolean = false
    def isFloatList: _root_.scala.Boolean = false
    def isAnyList: _root_.scala.Boolean = false
    def nodeList: _root_.scala.Option[org.tensorflow.framework.meta_graph.CollectionDef.NodeList] = _root_.scala.None
    def bytesList: _root_.scala.Option[org.tensorflow.framework.meta_graph.CollectionDef.BytesList] = _root_.scala.None
    def int64List: _root_.scala.Option[org.tensorflow.framework.meta_graph.CollectionDef.Int64List] = _root_.scala.None
    def floatList: _root_.scala.Option[org.tensorflow.framework.meta_graph.CollectionDef.FloatList] = _root_.scala.None
    def anyList: _root_.scala.Option[org.tensorflow.framework.meta_graph.CollectionDef.AnyList] = _root_.scala.None
  }
  object Kind {
    @SerialVersionUID(0L)
    case object Empty extends org.tensorflow.framework.meta_graph.CollectionDef.Kind {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class NodeList(value: org.tensorflow.framework.meta_graph.CollectionDef.NodeList) extends org.tensorflow.framework.meta_graph.CollectionDef.Kind {
      type ValueType = org.tensorflow.framework.meta_graph.CollectionDef.NodeList
      override def isNodeList: _root_.scala.Boolean = true
      override def nodeList: _root_.scala.Option[org.tensorflow.framework.meta_graph.CollectionDef.NodeList] = Some(value)
      override def number: _root_.scala.Int = 1
    }
    @SerialVersionUID(0L)
    final case class BytesList(value: org.tensorflow.framework.meta_graph.CollectionDef.BytesList) extends org.tensorflow.framework.meta_graph.CollectionDef.Kind {
      type ValueType = org.tensorflow.framework.meta_graph.CollectionDef.BytesList
      override def isBytesList: _root_.scala.Boolean = true
      override def bytesList: _root_.scala.Option[org.tensorflow.framework.meta_graph.CollectionDef.BytesList] = Some(value)
      override def number: _root_.scala.Int = 2
    }
    @SerialVersionUID(0L)
    final case class Int64List(value: org.tensorflow.framework.meta_graph.CollectionDef.Int64List) extends org.tensorflow.framework.meta_graph.CollectionDef.Kind {
      type ValueType = org.tensorflow.framework.meta_graph.CollectionDef.Int64List
      override def isInt64List: _root_.scala.Boolean = true
      override def int64List: _root_.scala.Option[org.tensorflow.framework.meta_graph.CollectionDef.Int64List] = Some(value)
      override def number: _root_.scala.Int = 3
    }
    @SerialVersionUID(0L)
    final case class FloatList(value: org.tensorflow.framework.meta_graph.CollectionDef.FloatList) extends org.tensorflow.framework.meta_graph.CollectionDef.Kind {
      type ValueType = org.tensorflow.framework.meta_graph.CollectionDef.FloatList
      override def isFloatList: _root_.scala.Boolean = true
      override def floatList: _root_.scala.Option[org.tensorflow.framework.meta_graph.CollectionDef.FloatList] = Some(value)
      override def number: _root_.scala.Int = 4
    }
    @SerialVersionUID(0L)
    final case class AnyList(value: org.tensorflow.framework.meta_graph.CollectionDef.AnyList) extends org.tensorflow.framework.meta_graph.CollectionDef.Kind {
      type ValueType = org.tensorflow.framework.meta_graph.CollectionDef.AnyList
      override def isAnyList: _root_.scala.Boolean = true
      override def anyList: _root_.scala.Option[org.tensorflow.framework.meta_graph.CollectionDef.AnyList] = Some(value)
      override def number: _root_.scala.Int = 5
    }
  }
  /** NodeList is used for collecting nodes in graph. For example
    * collection_def {
    *   key: "summaries"
    *   value {
    *     node_list {
    *       value: "input_producer/ScalarSummary:0"
    *       value: "shuffle_batch/ScalarSummary:0"
    *       value: "ImageSummary:0"
    *     }
    *   }
    */
  @SerialVersionUID(0L)
  final case class NodeList(
      value: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[NodeList] {
      @transient
      private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
      private[this] def __computeSerializedValue(): _root_.scala.Int = {
        var __size = 0
        value.foreach { __item =>
          val __value = __item
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        value.foreach { __v =>
          val __m = __v
          _output__.writeString(1, __m)
        };
        unknownFields.writeTo(_output__)
      }
      def clearValue = copy(value = _root_.scala.Seq.empty)
      def addValue(__vs: _root_.scala.Predef.String*): NodeList = addAllValue(__vs)
      def addAllValue(__vs: Iterable[_root_.scala.Predef.String]): NodeList = copy(value = value ++ __vs)
      def withValue(__v: _root_.scala.Seq[_root_.scala.Predef.String]): NodeList = copy(value = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => value
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PRepeated(value.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion = org.tensorflow.framework.meta_graph.CollectionDef.NodeList
      // @@protoc_insertion_point(GeneratedMessage[tensorflow.CollectionDef.NodeList])
  }
  
  object NodeList extends scalapb.GeneratedMessageCompanion[org.tensorflow.framework.meta_graph.CollectionDef.NodeList] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[org.tensorflow.framework.meta_graph.CollectionDef.NodeList] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): org.tensorflow.framework.meta_graph.CollectionDef.NodeList = {
      val __value: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __value += _input__.readStringRequireUtf8()
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      org.tensorflow.framework.meta_graph.CollectionDef.NodeList(
          value = __value.result(),
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[org.tensorflow.framework.meta_graph.CollectionDef.NodeList] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        org.tensorflow.framework.meta_graph.CollectionDef.NodeList(
          value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty)
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = org.tensorflow.framework.meta_graph.CollectionDef.javaDescriptor.getNestedTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = org.tensorflow.framework.meta_graph.CollectionDef.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = org.tensorflow.framework.meta_graph.CollectionDef.NodeList(
      value = _root_.scala.Seq.empty
    )
    implicit class NodeListLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.meta_graph.CollectionDef.NodeList]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, org.tensorflow.framework.meta_graph.CollectionDef.NodeList](_l) {
      def value: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.value)((c_, f_) => c_.copy(value = f_))
    }
    final val VALUE_FIELD_NUMBER = 1
    def of(
      value: _root_.scala.Seq[_root_.scala.Predef.String]
    ): _root_.org.tensorflow.framework.meta_graph.CollectionDef.NodeList = _root_.org.tensorflow.framework.meta_graph.CollectionDef.NodeList(
      value
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[tensorflow.CollectionDef.NodeList])
  }
  
  /** BytesList is used for collecting strings and serialized protobufs. For
    * example:
    * collection_def {
    *   key: "trainable_variables"
    *   value {
    *     bytes_list {
    *       value: "&92;n&92;017conv1/weights:0&92;022&92;024conv1/weights/Assign
    *              &92;032&92;024conv1/weights/read:0"
    *       value: "&92;n&92;016conv1/biases:0&92;022&92;023conv1/biases/Assign&92;032
    *              &92;023conv1/biases/read:0"
    *     }
    *   }
    * }
    */
  @SerialVersionUID(0L)
  final case class BytesList(
      value: _root_.scala.Seq[_root_.com.google.protobuf.ByteString] = _root_.scala.Seq.empty,
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[BytesList] {
      @transient
      private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
      private[this] def __computeSerializedValue(): _root_.scala.Int = {
        var __size = 0
        value.foreach { __item =>
          val __value = __item
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(1, __value)
        }
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        value.foreach { __v =>
          val __m = __v
          _output__.writeBytes(1, __m)
        };
        unknownFields.writeTo(_output__)
      }
      def clearValue = copy(value = _root_.scala.Seq.empty)
      def addValue(__vs: _root_.com.google.protobuf.ByteString*): BytesList = addAllValue(__vs)
      def addAllValue(__vs: Iterable[_root_.com.google.protobuf.ByteString]): BytesList = copy(value = value ++ __vs)
      def withValue(__v: _root_.scala.Seq[_root_.com.google.protobuf.ByteString]): BytesList = copy(value = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => value
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PRepeated(value.iterator.map(_root_.scalapb.descriptors.PByteString(_)).toVector)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion = org.tensorflow.framework.meta_graph.CollectionDef.BytesList
      // @@protoc_insertion_point(GeneratedMessage[tensorflow.CollectionDef.BytesList])
  }
  
  object BytesList extends scalapb.GeneratedMessageCompanion[org.tensorflow.framework.meta_graph.CollectionDef.BytesList] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[org.tensorflow.framework.meta_graph.CollectionDef.BytesList] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): org.tensorflow.framework.meta_graph.CollectionDef.BytesList = {
      val __value: _root_.scala.collection.immutable.VectorBuilder[_root_.com.google.protobuf.ByteString] = new _root_.scala.collection.immutable.VectorBuilder[_root_.com.google.protobuf.ByteString]
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __value += _input__.readBytes()
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      org.tensorflow.framework.meta_graph.CollectionDef.BytesList(
          value = __value.result(),
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[org.tensorflow.framework.meta_graph.CollectionDef.BytesList] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        org.tensorflow.framework.meta_graph.CollectionDef.BytesList(
          value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[_root_.com.google.protobuf.ByteString]]).getOrElse(_root_.scala.Seq.empty)
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = org.tensorflow.framework.meta_graph.CollectionDef.javaDescriptor.getNestedTypes().get(1)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = org.tensorflow.framework.meta_graph.CollectionDef.scalaDescriptor.nestedMessages(1)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = org.tensorflow.framework.meta_graph.CollectionDef.BytesList(
      value = _root_.scala.Seq.empty
    )
    implicit class BytesListLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.meta_graph.CollectionDef.BytesList]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, org.tensorflow.framework.meta_graph.CollectionDef.BytesList](_l) {
      def value: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.com.google.protobuf.ByteString]] = field(_.value)((c_, f_) => c_.copy(value = f_))
    }
    final val VALUE_FIELD_NUMBER = 1
    def of(
      value: _root_.scala.Seq[_root_.com.google.protobuf.ByteString]
    ): _root_.org.tensorflow.framework.meta_graph.CollectionDef.BytesList = _root_.org.tensorflow.framework.meta_graph.CollectionDef.BytesList(
      value
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[tensorflow.CollectionDef.BytesList])
  }
  
  /** Int64List is used for collecting int, int64 and long values.
    */
  @SerialVersionUID(0L)
  final case class Int64List(
      value: _root_.scala.Seq[_root_.scala.Long] = _root_.scala.Seq.empty,
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Int64List] {
      private[this] def valueSerializedSize = {
        if (__valueSerializedSizeField == 0) __valueSerializedSizeField = {
          var __s: _root_.scala.Int = 0
          value.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeInt64SizeNoTag(__i))
          __s
        }
        __valueSerializedSizeField
      }
      @transient private[this] var __valueSerializedSizeField: _root_.scala.Int = 0
      @transient
      private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
      private[this] def __computeSerializedValue(): _root_.scala.Int = {
        var __size = 0
        if (value.nonEmpty) {
          val __localsize = valueSerializedSize
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
        }
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        if (value.nonEmpty) {
          _output__.writeTag(1, 2)
          _output__.writeUInt32NoTag(valueSerializedSize)
          value.foreach(_output__.writeInt64NoTag)
        };
        unknownFields.writeTo(_output__)
      }
      def clearValue = copy(value = _root_.scala.Seq.empty)
      def addValue(__vs: _root_.scala.Long*): Int64List = addAllValue(__vs)
      def addAllValue(__vs: Iterable[_root_.scala.Long]): Int64List = copy(value = value ++ __vs)
      def withValue(__v: _root_.scala.Seq[_root_.scala.Long]): Int64List = copy(value = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => value
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PRepeated(value.iterator.map(_root_.scalapb.descriptors.PLong(_)).toVector)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion = org.tensorflow.framework.meta_graph.CollectionDef.Int64List
      // @@protoc_insertion_point(GeneratedMessage[tensorflow.CollectionDef.Int64List])
  }
  
  object Int64List extends scalapb.GeneratedMessageCompanion[org.tensorflow.framework.meta_graph.CollectionDef.Int64List] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[org.tensorflow.framework.meta_graph.CollectionDef.Int64List] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): org.tensorflow.framework.meta_graph.CollectionDef.Int64List = {
      val __value: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Long] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Long]
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __value += _input__.readInt64()
          case 10 => {
            val length = _input__.readRawVarint32()
            val oldLimit = _input__.pushLimit(length)
            while (_input__.getBytesUntilLimit > 0) {
              __value += _input__.readInt64()
            }
            _input__.popLimit(oldLimit)
          }
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      org.tensorflow.framework.meta_graph.CollectionDef.Int64List(
          value = __value.result(),
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[org.tensorflow.framework.meta_graph.CollectionDef.Int64List] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        org.tensorflow.framework.meta_graph.CollectionDef.Int64List(
          value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[_root_.scala.Long]]).getOrElse(_root_.scala.Seq.empty)
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = org.tensorflow.framework.meta_graph.CollectionDef.javaDescriptor.getNestedTypes().get(2)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = org.tensorflow.framework.meta_graph.CollectionDef.scalaDescriptor.nestedMessages(2)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = org.tensorflow.framework.meta_graph.CollectionDef.Int64List(
      value = _root_.scala.Seq.empty
    )
    implicit class Int64ListLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.meta_graph.CollectionDef.Int64List]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, org.tensorflow.framework.meta_graph.CollectionDef.Int64List](_l) {
      def value: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Long]] = field(_.value)((c_, f_) => c_.copy(value = f_))
    }
    final val VALUE_FIELD_NUMBER = 1
    def of(
      value: _root_.scala.Seq[_root_.scala.Long]
    ): _root_.org.tensorflow.framework.meta_graph.CollectionDef.Int64List = _root_.org.tensorflow.framework.meta_graph.CollectionDef.Int64List(
      value
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[tensorflow.CollectionDef.Int64List])
  }
  
  /** FloatList is used for collecting float values.
    */
  @SerialVersionUID(0L)
  final case class FloatList(
      value: _root_.scala.Seq[_root_.scala.Float] = _root_.scala.Seq.empty,
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[FloatList] {
      private[this] def valueSerializedSize = {
        4 * value.size
      }
      @transient
      private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
      private[this] def __computeSerializedValue(): _root_.scala.Int = {
        var __size = 0
        if (value.nonEmpty) {
          val __localsize = valueSerializedSize
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
        }
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        if (value.nonEmpty) {
          _output__.writeTag(1, 2)
          _output__.writeUInt32NoTag(valueSerializedSize)
          value.foreach(_output__.writeFloatNoTag)
        };
        unknownFields.writeTo(_output__)
      }
      def clearValue = copy(value = _root_.scala.Seq.empty)
      def addValue(__vs: _root_.scala.Float*): FloatList = addAllValue(__vs)
      def addAllValue(__vs: Iterable[_root_.scala.Float]): FloatList = copy(value = value ++ __vs)
      def withValue(__v: _root_.scala.Seq[_root_.scala.Float]): FloatList = copy(value = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => value
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PRepeated(value.iterator.map(_root_.scalapb.descriptors.PFloat(_)).toVector)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion = org.tensorflow.framework.meta_graph.CollectionDef.FloatList
      // @@protoc_insertion_point(GeneratedMessage[tensorflow.CollectionDef.FloatList])
  }
  
  object FloatList extends scalapb.GeneratedMessageCompanion[org.tensorflow.framework.meta_graph.CollectionDef.FloatList] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[org.tensorflow.framework.meta_graph.CollectionDef.FloatList] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): org.tensorflow.framework.meta_graph.CollectionDef.FloatList = {
      val __value: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Float] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Float]
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 13 =>
            __value += _input__.readFloat()
          case 10 => {
            val length = _input__.readRawVarint32()
            val oldLimit = _input__.pushLimit(length)
            while (_input__.getBytesUntilLimit > 0) {
              __value += _input__.readFloat()
            }
            _input__.popLimit(oldLimit)
          }
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      org.tensorflow.framework.meta_graph.CollectionDef.FloatList(
          value = __value.result(),
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[org.tensorflow.framework.meta_graph.CollectionDef.FloatList] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        org.tensorflow.framework.meta_graph.CollectionDef.FloatList(
          value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[_root_.scala.Float]]).getOrElse(_root_.scala.Seq.empty)
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = org.tensorflow.framework.meta_graph.CollectionDef.javaDescriptor.getNestedTypes().get(3)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = org.tensorflow.framework.meta_graph.CollectionDef.scalaDescriptor.nestedMessages(3)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = org.tensorflow.framework.meta_graph.CollectionDef.FloatList(
      value = _root_.scala.Seq.empty
    )
    implicit class FloatListLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.meta_graph.CollectionDef.FloatList]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, org.tensorflow.framework.meta_graph.CollectionDef.FloatList](_l) {
      def value: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Float]] = field(_.value)((c_, f_) => c_.copy(value = f_))
    }
    final val VALUE_FIELD_NUMBER = 1
    def of(
      value: _root_.scala.Seq[_root_.scala.Float]
    ): _root_.org.tensorflow.framework.meta_graph.CollectionDef.FloatList = _root_.org.tensorflow.framework.meta_graph.CollectionDef.FloatList(
      value
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[tensorflow.CollectionDef.FloatList])
  }
  
  /** AnyList is used for collecting Any protos.
    */
  @SerialVersionUID(0L)
  final case class AnyList(
                            value: _root_.scala.Seq[Any] = _root_.scala.Seq.empty,
                            unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[AnyList] {
      @transient
      private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
      private[this] def __computeSerializedValue(): _root_.scala.Int = {
        var __size = 0
        value.foreach { __item =>
          val __value = __item
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        }
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        value.foreach { __v =>
          val __m = __v
          _output__.writeTag(1, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
        unknownFields.writeTo(_output__)
      }
      def clearValue = copy(value = _root_.scala.Seq.empty)
      def addValue(__vs: Any*): AnyList = addAllValue(__vs)
      def addAllValue(__vs: Iterable[Any]): AnyList = copy(value = value ++ __vs)
      def withValue(__v: _root_.scala.Seq[Any]): AnyList = copy(value = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => value
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PRepeated(value.iterator.map(_.toPMessage).toVector)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion = org.tensorflow.framework.meta_graph.CollectionDef.AnyList
      // @@protoc_insertion_point(GeneratedMessage[tensorflow.CollectionDef.AnyList])
  }
  
  object AnyList extends scalapb.GeneratedMessageCompanion[org.tensorflow.framework.meta_graph.CollectionDef.AnyList] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[org.tensorflow.framework.meta_graph.CollectionDef.AnyList] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): org.tensorflow.framework.meta_graph.CollectionDef.AnyList = {
      val __value: _root_.scala.collection.immutable.VectorBuilder[Any] = new _root_.scala.collection.immutable.VectorBuilder[Any]
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __value += _root_.scalapb.LiteParser.readMessage[Any](_input__)
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      org.tensorflow.framework.meta_graph.CollectionDef.AnyList(
          value = __value.result(),
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[org.tensorflow.framework.meta_graph.CollectionDef.AnyList] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        org.tensorflow.framework.meta_graph.CollectionDef.AnyList(
          value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[Any]]).getOrElse(_root_.scala.Seq.empty)
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = org.tensorflow.framework.meta_graph.CollectionDef.javaDescriptor.getNestedTypes().get(4)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = org.tensorflow.framework.meta_graph.CollectionDef.scalaDescriptor.nestedMessages(4)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
      (__number: @_root_.scala.unchecked) match {
        case 1 => __out = Any
      }
      __out
    }
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = org.tensorflow.framework.meta_graph.CollectionDef.AnyList(
      value = _root_.scala.Seq.empty
    )
    implicit class AnyListLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.meta_graph.CollectionDef.AnyList]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, org.tensorflow.framework.meta_graph.CollectionDef.AnyList](_l) {
      def value: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[Any]] = field(_.value)((c_, f_) => c_.copy(value = f_))
    }
    final val VALUE_FIELD_NUMBER = 1
    def of(
      value: _root_.scala.Seq[Any]
    ): _root_.org.tensorflow.framework.meta_graph.CollectionDef.AnyList = _root_.org.tensorflow.framework.meta_graph.CollectionDef.AnyList(
      value
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[tensorflow.CollectionDef.AnyList])
  }
  
  implicit class CollectionDefLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.meta_graph.CollectionDef]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, org.tensorflow.framework.meta_graph.CollectionDef](_l) {
    def nodeList: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.meta_graph.CollectionDef.NodeList] = field(_.getNodeList)((c_, f_) => c_.copy(kind = org.tensorflow.framework.meta_graph.CollectionDef.Kind.NodeList(f_)))
    def bytesList: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.meta_graph.CollectionDef.BytesList] = field(_.getBytesList)((c_, f_) => c_.copy(kind = org.tensorflow.framework.meta_graph.CollectionDef.Kind.BytesList(f_)))
    def int64List: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.meta_graph.CollectionDef.Int64List] = field(_.getInt64List)((c_, f_) => c_.copy(kind = org.tensorflow.framework.meta_graph.CollectionDef.Kind.Int64List(f_)))
    def floatList: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.meta_graph.CollectionDef.FloatList] = field(_.getFloatList)((c_, f_) => c_.copy(kind = org.tensorflow.framework.meta_graph.CollectionDef.Kind.FloatList(f_)))
    def anyList: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.meta_graph.CollectionDef.AnyList] = field(_.getAnyList)((c_, f_) => c_.copy(kind = org.tensorflow.framework.meta_graph.CollectionDef.Kind.AnyList(f_)))
    def kind: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.meta_graph.CollectionDef.Kind] = field(_.kind)((c_, f_) => c_.copy(kind = f_))
  }
  final val NODE_LIST_FIELD_NUMBER = 1
  final val BYTES_LIST_FIELD_NUMBER = 2
  final val INT64_LIST_FIELD_NUMBER = 3
  final val FLOAT_LIST_FIELD_NUMBER = 4
  final val ANY_LIST_FIELD_NUMBER = 5
  def of(
    kind: org.tensorflow.framework.meta_graph.CollectionDef.Kind
  ): _root_.org.tensorflow.framework.meta_graph.CollectionDef = _root_.org.tensorflow.framework.meta_graph.CollectionDef(
    kind
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[tensorflow.CollectionDef])
}
